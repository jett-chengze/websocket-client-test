// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/websocket.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PayloadType int32

const (
	PayloadType_FIRST_CONNECT           PayloadType = 0
	PayloadType_SERVER_TIMING_BROADCAST PayloadType = 1
	PayloadType_GET_OTHER_CONNECT_IDS   PayloadType = 2
	PayloadType_KILL_OTHER_CONNECT      PayloadType = 3
	PayloadType_REDIS_NEW_STRING        PayloadType = 4
	PayloadType_REDIS_GET_STRING        PayloadType = 5
)

// Enum value maps for PayloadType.
var (
	PayloadType_name = map[int32]string{
		0: "FIRST_CONNECT",
		1: "SERVER_TIMING_BROADCAST",
		2: "GET_OTHER_CONNECT_IDS",
		3: "KILL_OTHER_CONNECT",
		4: "REDIS_NEW_STRING",
		5: "REDIS_GET_STRING",
	}
	PayloadType_value = map[string]int32{
		"FIRST_CONNECT":           0,
		"SERVER_TIMING_BROADCAST": 1,
		"GET_OTHER_CONNECT_IDS":   2,
		"KILL_OTHER_CONNECT":      3,
		"REDIS_NEW_STRING":        4,
		"REDIS_GET_STRING":        5,
	}
)

func (x PayloadType) Enum() *PayloadType {
	p := new(PayloadType)
	*p = x
	return p
}

func (x PayloadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayloadType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_websocket_proto_enumTypes[0].Descriptor()
}

func (PayloadType) Type() protoreflect.EnumType {
	return &file_proto_websocket_proto_enumTypes[0]
}

func (x PayloadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayloadType.Descriptor instead.
func (PayloadType) EnumDescriptor() ([]byte, []int) {
	return file_proto_websocket_proto_rawDescGZIP(), []int{0}
}

type Envelope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PayloadType   PayloadType            `protobuf:"varint,1,opt,name=PayloadType,proto3,enum=ws.PayloadType" json:"PayloadType,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=Payload,proto3" json:"Payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_proto_websocket_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_proto_websocket_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_proto_websocket_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetPayloadType() PayloadType {
	if x != nil {
		return x.PayloadType
	}
	return PayloadType_FIRST_CONNECT
}

func (x *Envelope) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// FIRST_CONNECT
type FirstConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectId     int64                  `protobuf:"varint,1,opt,name=connectId,proto3" json:"connectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FirstConnectResponse) Reset() {
	*x = FirstConnectResponse{}
	mi := &file_proto_websocket_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FirstConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstConnectResponse) ProtoMessage() {}

func (x *FirstConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_websocket_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstConnectResponse.ProtoReflect.Descriptor instead.
func (*FirstConnectResponse) Descriptor() ([]byte, []int) {
	return file_proto_websocket_proto_rawDescGZIP(), []int{1}
}

func (x *FirstConnectResponse) GetConnectId() int64 {
	if x != nil {
		return x.ConnectId
	}
	return 0
}

// SERVER_TIMING_BROADCAST
type ServerTimingBroadCastRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=Msg,proto3" json:"Msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerTimingBroadCastRequest) Reset() {
	*x = ServerTimingBroadCastRequest{}
	mi := &file_proto_websocket_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerTimingBroadCastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTimingBroadCastRequest) ProtoMessage() {}

func (x *ServerTimingBroadCastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_websocket_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTimingBroadCastRequest.ProtoReflect.Descriptor instead.
func (*ServerTimingBroadCastRequest) Descriptor() ([]byte, []int) {
	return file_proto_websocket_proto_rawDescGZIP(), []int{2}
}

func (x *ServerTimingBroadCastRequest) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// GET_OTHER_CONNECT_IDS
type GetOtherConnectIdsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MyConnectId   int64                  `protobuf:"varint,1,opt,name=myConnectId,proto3" json:"myConnectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOtherConnectIdsRequest) Reset() {
	*x = GetOtherConnectIdsRequest{}
	mi := &file_proto_websocket_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOtherConnectIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOtherConnectIdsRequest) ProtoMessage() {}

func (x *GetOtherConnectIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_websocket_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOtherConnectIdsRequest.ProtoReflect.Descriptor instead.
func (*GetOtherConnectIdsRequest) Descriptor() ([]byte, []int) {
	return file_proto_websocket_proto_rawDescGZIP(), []int{3}
}

func (x *GetOtherConnectIdsRequest) GetMyConnectId() int64 {
	if x != nil {
		return x.MyConnectId
	}
	return 0
}

type GetOtherConnectIdsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OtherConnectIds []int64                `protobuf:"varint,1,rep,packed,name=otherConnectIds,proto3" json:"otherConnectIds,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetOtherConnectIdsResponse) Reset() {
	*x = GetOtherConnectIdsResponse{}
	mi := &file_proto_websocket_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOtherConnectIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOtherConnectIdsResponse) ProtoMessage() {}

func (x *GetOtherConnectIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_websocket_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOtherConnectIdsResponse.ProtoReflect.Descriptor instead.
func (*GetOtherConnectIdsResponse) Descriptor() ([]byte, []int) {
	return file_proto_websocket_proto_rawDescGZIP(), []int{4}
}

func (x *GetOtherConnectIdsResponse) GetOtherConnectIds() []int64 {
	if x != nil {
		return x.OtherConnectIds
	}
	return nil
}

// KILL_OTHER_CONNECT
type KillOtherConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectId     int64                  `protobuf:"varint,1,opt,name=connectId,proto3" json:"connectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillOtherConnectRequest) Reset() {
	*x = KillOtherConnectRequest{}
	mi := &file_proto_websocket_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillOtherConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillOtherConnectRequest) ProtoMessage() {}

func (x *KillOtherConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_websocket_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillOtherConnectRequest.ProtoReflect.Descriptor instead.
func (*KillOtherConnectRequest) Descriptor() ([]byte, []int) {
	return file_proto_websocket_proto_rawDescGZIP(), []int{5}
}

func (x *KillOtherConnectRequest) GetConnectId() int64 {
	if x != nil {
		return x.ConnectId
	}
	return 0
}

type KillOtherConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillOtherConnectResponse) Reset() {
	*x = KillOtherConnectResponse{}
	mi := &file_proto_websocket_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillOtherConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillOtherConnectResponse) ProtoMessage() {}

func (x *KillOtherConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_websocket_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillOtherConnectResponse.ProtoReflect.Descriptor instead.
func (*KillOtherConnectResponse) Descriptor() ([]byte, []int) {
	return file_proto_websocket_proto_rawDescGZIP(), []int{6}
}

func (x *KillOtherConnectResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

// REDIS_NEW_STRING
type RedisNewStringRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedisNewStringRequest) Reset() {
	*x = RedisNewStringRequest{}
	mi := &file_proto_websocket_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedisNewStringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisNewStringRequest) ProtoMessage() {}

func (x *RedisNewStringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_websocket_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisNewStringRequest.ProtoReflect.Descriptor instead.
func (*RedisNewStringRequest) Descriptor() ([]byte, []int) {
	return file_proto_websocket_proto_rawDescGZIP(), []int{7}
}

func (x *RedisNewStringRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RedisNewStringRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type RedisNewStringResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	Result        string                 `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedisNewStringResponse) Reset() {
	*x = RedisNewStringResponse{}
	mi := &file_proto_websocket_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedisNewStringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisNewStringResponse) ProtoMessage() {}

func (x *RedisNewStringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_websocket_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisNewStringResponse.ProtoReflect.Descriptor instead.
func (*RedisNewStringResponse) Descriptor() ([]byte, []int) {
	return file_proto_websocket_proto_rawDescGZIP(), []int{8}
}

func (x *RedisNewStringResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *RedisNewStringResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// REDIS_GET_STRING
type RedisGetStringRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedisGetStringRequest) Reset() {
	*x = RedisGetStringRequest{}
	mi := &file_proto_websocket_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedisGetStringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisGetStringRequest) ProtoMessage() {}

func (x *RedisGetStringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_websocket_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisGetStringRequest.ProtoReflect.Descriptor instead.
func (*RedisGetStringRequest) Descriptor() ([]byte, []int) {
	return file_proto_websocket_proto_rawDescGZIP(), []int{9}
}

func (x *RedisGetStringRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type RedisGetStringResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	Result        string                 `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedisGetStringResponse) Reset() {
	*x = RedisGetStringResponse{}
	mi := &file_proto_websocket_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedisGetStringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisGetStringResponse) ProtoMessage() {}

func (x *RedisGetStringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_websocket_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisGetStringResponse.ProtoReflect.Descriptor instead.
func (*RedisGetStringResponse) Descriptor() ([]byte, []int) {
	return file_proto_websocket_proto_rawDescGZIP(), []int{10}
}

func (x *RedisGetStringResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *RedisGetStringResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_proto_websocket_proto protoreflect.FileDescriptor

const file_proto_websocket_proto_rawDesc = "" +
	"\n" +
	"\x15proto/websocket.proto\x12\x02ws\"W\n" +
	"\bEnvelope\x121\n" +
	"\vPayloadType\x18\x01 \x01(\x0e2\x0f.ws.PayloadTypeR\vPayloadType\x12\x18\n" +
	"\aPayload\x18\x02 \x01(\fR\aPayload\"4\n" +
	"\x14FirstConnectResponse\x12\x1c\n" +
	"\tconnectId\x18\x01 \x01(\x03R\tconnectId\"0\n" +
	"\x1cServerTimingBroadCastRequest\x12\x10\n" +
	"\x03Msg\x18\x01 \x01(\tR\x03Msg\"=\n" +
	"\x19GetOtherConnectIdsRequest\x12 \n" +
	"\vmyConnectId\x18\x01 \x01(\x03R\vmyConnectId\"F\n" +
	"\x1aGetOtherConnectIdsResponse\x12(\n" +
	"\x0fotherConnectIds\x18\x01 \x03(\x03R\x0fotherConnectIds\"7\n" +
	"\x17KillOtherConnectRequest\x12\x1c\n" +
	"\tconnectId\x18\x01 \x01(\x03R\tconnectId\"8\n" +
	"\x18KillOtherConnectResponse\x12\x1c\n" +
	"\tIsSuccess\x18\x01 \x01(\bR\tIsSuccess\"?\n" +
	"\x15RedisNewStringRequest\x12\x10\n" +
	"\x03Key\x18\x01 \x01(\tR\x03Key\x12\x14\n" +
	"\x05Value\x18\x02 \x01(\tR\x05Value\"N\n" +
	"\x16RedisNewStringResponse\x12\x1c\n" +
	"\tIsSuccess\x18\x01 \x01(\bR\tIsSuccess\x12\x16\n" +
	"\x06Result\x18\x02 \x01(\tR\x06Result\")\n" +
	"\x15RedisGetStringRequest\x12\x10\n" +
	"\x03Key\x18\x01 \x01(\tR\x03Key\"N\n" +
	"\x16RedisGetStringResponse\x12\x1c\n" +
	"\tIsSuccess\x18\x01 \x01(\bR\tIsSuccess\x12\x16\n" +
	"\x06Result\x18\x02 \x01(\tR\x06Result*\x9c\x01\n" +
	"\vPayloadType\x12\x11\n" +
	"\rFIRST_CONNECT\x10\x00\x12\x1b\n" +
	"\x17SERVER_TIMING_BROADCAST\x10\x01\x12\x19\n" +
	"\x15GET_OTHER_CONNECT_IDS\x10\x02\x12\x16\n" +
	"\x12KILL_OTHER_CONNECT\x10\x03\x12\x14\n" +
	"\x10REDIS_NEW_STRING\x10\x04\x12\x14\n" +
	"\x10REDIS_GET_STRING\x10\x052\x12\n" +
	"\x10WebsocketServiceB\bZ\x06proto/b\x06proto3"

var (
	file_proto_websocket_proto_rawDescOnce sync.Once
	file_proto_websocket_proto_rawDescData []byte
)

func file_proto_websocket_proto_rawDescGZIP() []byte {
	file_proto_websocket_proto_rawDescOnce.Do(func() {
		file_proto_websocket_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_websocket_proto_rawDesc), len(file_proto_websocket_proto_rawDesc)))
	})
	return file_proto_websocket_proto_rawDescData
}

var file_proto_websocket_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_websocket_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_websocket_proto_goTypes = []any{
	(PayloadType)(0),                     // 0: ws.PayloadType
	(*Envelope)(nil),                     // 1: ws.Envelope
	(*FirstConnectResponse)(nil),         // 2: ws.FirstConnectResponse
	(*ServerTimingBroadCastRequest)(nil), // 3: ws.ServerTimingBroadCastRequest
	(*GetOtherConnectIdsRequest)(nil),    // 4: ws.GetOtherConnectIdsRequest
	(*GetOtherConnectIdsResponse)(nil),   // 5: ws.GetOtherConnectIdsResponse
	(*KillOtherConnectRequest)(nil),      // 6: ws.KillOtherConnectRequest
	(*KillOtherConnectResponse)(nil),     // 7: ws.KillOtherConnectResponse
	(*RedisNewStringRequest)(nil),        // 8: ws.RedisNewStringRequest
	(*RedisNewStringResponse)(nil),       // 9: ws.RedisNewStringResponse
	(*RedisGetStringRequest)(nil),        // 10: ws.RedisGetStringRequest
	(*RedisGetStringResponse)(nil),       // 11: ws.RedisGetStringResponse
}
var file_proto_websocket_proto_depIdxs = []int32{
	0, // 0: ws.Envelope.PayloadType:type_name -> ws.PayloadType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_websocket_proto_init() }
func file_proto_websocket_proto_init() {
	if File_proto_websocket_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_websocket_proto_rawDesc), len(file_proto_websocket_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_websocket_proto_goTypes,
		DependencyIndexes: file_proto_websocket_proto_depIdxs,
		EnumInfos:         file_proto_websocket_proto_enumTypes,
		MessageInfos:      file_proto_websocket_proto_msgTypes,
	}.Build()
	File_proto_websocket_proto = out.File
	file_proto_websocket_proto_goTypes = nil
	file_proto_websocket_proto_depIdxs = nil
}
